 // RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
SpeedController* RobotMap::chassisRightRearMotor = NULL;
SpeedController* RobotMap::chassisRightFrontMotor = NULL;
SpeedController* RobotMap::chassisLeftFrontMotor = NULL;
SpeedController* RobotMap::chassisLeftRearMotor = NULL;
RobotDrive* RobotMap::chassisRobotDrive = NULL;
DigitalInput* RobotMap::chassisAutoSwitch = NULL;
DigitalInput* RobotMap::chassisAutoSwitch2 = NULL;
SpeedController* RobotMap::liftMechanismLiftMotor = NULL;
DigitalInput* RobotMap::liftMechanismUpperLimit = NULL;
DigitalInput* RobotMap::liftMechanismLowerLimit = NULL;
AnalogPotentiometer* RobotMap::liftMechanismLiftPot = NULL;
Compressor* RobotMap::solenc = NULL;
Solenoid* RobotMap::solenSolenoid = NULL;
Solenoid* RobotMap::solenkickSolenoid = NULL;
SpeedController* RobotMap::noodlePickupNoodleMotor = NULL;
DigitalInput* RobotMap::clawSubShoulderTopLS = NULL;
DigitalInput* RobotMap::clawSubShoulderBottomLS = NULL;
DigitalInput* RobotMap::clawSubElbowBottomLS = NULL;
DigitalInput* RobotMap::clawSubElbowTopLS = NULL;
SpeedController* RobotMap::clawSubClawElbow = NULL;
SpeedController* RobotMap::clawSubClawShoulder = NULL;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION

void RobotMap::init() {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	LiveWindow* lw = LiveWindow::GetInstance();

	chassisRightRearMotor = new Talon(0);
	lw->AddActuator("Chassis", "RightRearMotor", (Talon*) chassisRightRearMotor);
	
	chassisRightFrontMotor = new Talon(1);
	lw->AddActuator("Chassis", "RightFrontMotor", (Talon*) chassisRightFrontMotor);
	
	chassisLeftFrontMotor = new Talon(2);
	lw->AddActuator("Chassis", "LeftFrontMotor", (Talon*) chassisLeftFrontMotor);
	
	chassisLeftRearMotor = new Talon(3);
	lw->AddActuator("Chassis", "LeftRearMotor", (Talon*) chassisLeftRearMotor);
	
	chassisRobotDrive = new RobotDrive(chassisLeftFrontMotor, chassisLeftRearMotor,
              chassisRightFrontMotor, chassisRightRearMotor);
	
	chassisRobotDrive->SetSafetyEnabled(true);
        chassisRobotDrive->SetExpiration(0.1);
        chassisRobotDrive->SetSensitivity(0.5);
        chassisRobotDrive->SetMaxOutput(1.0);
        chassisRobotDrive->SetInvertedMotor(RobotDrive::kFrontLeftMotor, true);
        chassisRobotDrive->SetInvertedMotor(RobotDrive::kRearLeftMotor, true);
	chassisAutoSwitch = new DigitalInput(8);
	lw->AddSensor("Chassis", "AutoSwitch", chassisAutoSwitch);
	
	chassisAutoSwitch = new DigitalInput(9);
		lw->AddSensor("Chassis", "AutoSwitch2", chassisAutoSwitch2);

	liftMechanismLiftMotor = new Talon(4);
	lw->AddActuator("LiftMechanism", "LiftMotor", (Talon*) liftMechanismLiftMotor);
	
	liftMechanismUpperLimit = new DigitalInput(0);
	lw->AddSensor("LiftMechanism", "UpperLimit", liftMechanismUpperLimit);
	
	liftMechanismLowerLimit = new DigitalInput(1);
	lw->AddSensor("LiftMechanism", "LowerLimit", liftMechanismLowerLimit);
	
	liftMechanismLiftPot = new AnalogPotentiometer(0, 50.0, 0.0);
	lw->AddSensor("LiftMechanism", "LiftPot", liftMechanismLiftPot);
	
	solenc = new Compressor(0);
	
	
	solenSolenoid = new Solenoid(0, 0);
	lw->AddActuator("Solen", "Solenoid", solenSolenoid);
	
	solenkickSolenoid = new Solenoid(0, 7);
	lw->AddActuator("Solen", "kickSolenoid", solenkickSolenoid);
	
	noodlePickupNoodleMotor = new Talon(7);
	lw->AddActuator("NoodlePickup", "NoodleMotor", (Talon*) noodlePickupNoodleMotor);
	
	clawSubShoulderTopLS = new DigitalInput(2);
	lw->AddSensor("ClawSub", "ShoulderTopLS", clawSubShoulderTopLS);
	
	clawSubShoulderBottomLS = new DigitalInput(3);
	lw->AddSensor("ClawSub", "ShoulderBottomLS", clawSubShoulderBottomLS);
	
	clawSubElbowBottomLS = new DigitalInput(5);
	lw->AddSensor("ClawSub", "ElbowBottomLS", clawSubElbowBottomLS);
	
	clawSubElbowTopLS = new DigitalInput(6);
	lw->AddSensor("ClawSub", "ElbowTopLS", clawSubElbowTopLS);
	
	clawSubClawElbow = new Talon(6);
	lw->AddActuator("ClawSub", "ClawElbow", (Talon*) clawSubClawElbow);
	
	clawSubClawShoulder = new Talon(5);
	lw->AddActuator("ClawSub", "ClawShoulder", (Talon*) clawSubClawShoulder);
	


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
