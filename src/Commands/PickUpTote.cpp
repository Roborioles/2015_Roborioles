// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.



#include "PickUpTote.h"
bool PickUpTote::first=false;
bool PickUpTote::joystick=false;

PickUpTote::PickUpTote() {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::liftMechanism);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}

// Called just before this Command runs the first time
void PickUpTote::Initialize() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INITIALIZE
	// Robot::liftMechanism->Enable();
	// Robot::liftMechanism->SetSetpoint(36.5);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INITIALIZE
}

// Called repeatedly when this Command is scheduled to run
void PickUpTote::Execute() {
	if(Robot::oi->getGamePad()->GetThrottle()>.05||Robot::oi->getGamePad()->GetThrottle()<-.05){
		joystick=true;
	} else {
		Robot::liftMechanism->Disable(); // do we need this??
	}

	if(joystick){
		Robot::liftMechanism->Disable();
		Robot::liftMechanism->SetSpeed();
	} else {
		Robot::liftMechanism->Enable();
	}
	printf("%.2f\n",Robot::liftMechanism->GetSetpoint());
	if(Robot::liftMechanism->upperLimit->Get()&&Robot::liftMechanism->lowerLimit->Get()){
		if(Robot::oi->getGamePad()->GetRawButton(6)){
			if(first){
				Robot::liftMechanism->SetSetpointRelative(1.0);
				joystick=false;
				first=false;
			}
		} else if(Robot::oi->getGamePad()->GetRawButton(7)){
			if(first){
				Robot::liftMechanism->SetSetpointRelative(-1.0);
				joystick=false;
				first=false;
			}
		} else {
			first=true;
		}
	}
}

// Make this return true when this Command no longer needs to run execute()
bool PickUpTote::IsFinished() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ISFINISHED
	return Robot::liftMechanism->OnTarget();

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ISFINISHED
}

// Called once after isFinished returns true
void PickUpTote::End() {
	Robot::liftMechanism->Disable();
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void PickUpTote::Interrupted() {
	End();
}
